name: Publish to GitHub Packages and npm

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v3

      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: npm install

      - name: Lint and format check
        run: |
          npm run lint
          npm run format:check

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Publish package to GitHub Packages
        run: |
          npm version patch # Increment the patch version
          npm config set registry https://npm.pkg.github.com  # Set GitHub registry
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for GitHub Packages authentication

      - name: Publish package to npm
        run: |
          npm config set registry https://registry.npmjs.org  # Set npm registry
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        id: create_release
        run: |
          VERSION=$(node -p -e "require('./package.json').version")
          gh release create $VERSION dist/* --title "Release $VERSION" --notes "Release version $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
